// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: train_ticketing_system.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TrainDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainId                    int32   `protobuf:"varint,1,opt,name=train_id,json=trainId,proto3" json:"train_id,omitempty"`
	Name                       string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	From                       string  `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To                         string  `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Cost                       int32   `protobuf:"varint,5,opt,name=cost,proto3" json:"cost,omitempty"`
	AvailableSeatSectionACount int32   `protobuf:"varint,6,opt,name=available_seat_sectionA_count,json=availableSeatSectionACount,proto3" json:"available_seat_sectionA_count,omitempty"`
	AvailableSeatSecitonBCount int32   `protobuf:"varint,7,opt,name=available_seat_secitonB_count,json=availableSeatSecitonBCount,proto3" json:"available_seat_secitonB_count,omitempty"`
	AvailableSeatSectionA      []int32 `protobuf:"varint,8,rep,packed,name=available_seat_sectionA,json=availableSeatSectionA,proto3" json:"available_seat_sectionA,omitempty"`
	AvailableSeatSectionB      []int32 `protobuf:"varint,9,rep,packed,name=available_seat_sectionB,json=availableSeatSectionB,proto3" json:"available_seat_sectionB,omitempty"`
}

func (x *TrainDetails) Reset() {
	*x = TrainDetails{}
	mi := &file_train_ticketing_system_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrainDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainDetails) ProtoMessage() {}

func (x *TrainDetails) ProtoReflect() protoreflect.Message {
	mi := &file_train_ticketing_system_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainDetails.ProtoReflect.Descriptor instead.
func (*TrainDetails) Descriptor() ([]byte, []int) {
	return file_train_ticketing_system_proto_rawDescGZIP(), []int{0}
}

func (x *TrainDetails) GetTrainId() int32 {
	if x != nil {
		return x.TrainId
	}
	return 0
}

func (x *TrainDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TrainDetails) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TrainDetails) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TrainDetails) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *TrainDetails) GetAvailableSeatSectionACount() int32 {
	if x != nil {
		return x.AvailableSeatSectionACount
	}
	return 0
}

func (x *TrainDetails) GetAvailableSeatSecitonBCount() int32 {
	if x != nil {
		return x.AvailableSeatSecitonBCount
	}
	return 0
}

func (x *TrainDetails) GetAvailableSeatSectionA() []int32 {
	if x != nil {
		return x.AvailableSeatSectionA
	}
	return nil
}

func (x *TrainDetails) GetAvailableSeatSectionB() []int32 {
	if x != nil {
		return x.AvailableSeatSectionB
	}
	return nil
}

type TicketPurchaseDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainId      int32   `protobuf:"varint,1,opt,name=train_id,json=trainId,proto3" json:"train_id,omitempty"`
	TrainName    string  `protobuf:"bytes,2,opt,name=train_name,json=trainName,proto3" json:"train_name,omitempty"`
	From         string  `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To           string  `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	NoOfTicktes  int32   `protobuf:"varint,5,opt,name=noOfTicktes,proto3" json:"noOfTicktes,omitempty"`
	SectionASeat []int32 `protobuf:"varint,6,rep,packed,name=sectionA_seat,json=sectionASeat,proto3" json:"sectionA_seat,omitempty"`
	SectionBSeat []int32 `protobuf:"varint,7,rep,packed,name=sectionB_seat,json=sectionBSeat,proto3" json:"sectionB_seat,omitempty"`
	AmountPaid   int32   `protobuf:"varint,8,opt,name=amount_paid,json=amountPaid,proto3" json:"amount_paid,omitempty"`
	FirstName    string  `protobuf:"bytes,9,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName     string  `protobuf:"bytes,10,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	EmailId      string  `protobuf:"bytes,11,opt,name=email_id,json=emailId,proto3" json:"email_id,omitempty"`
}

func (x *TicketPurchaseDetails) Reset() {
	*x = TicketPurchaseDetails{}
	mi := &file_train_ticketing_system_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketPurchaseDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketPurchaseDetails) ProtoMessage() {}

func (x *TicketPurchaseDetails) ProtoReflect() protoreflect.Message {
	mi := &file_train_ticketing_system_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketPurchaseDetails.ProtoReflect.Descriptor instead.
func (*TicketPurchaseDetails) Descriptor() ([]byte, []int) {
	return file_train_ticketing_system_proto_rawDescGZIP(), []int{1}
}

func (x *TicketPurchaseDetails) GetTrainId() int32 {
	if x != nil {
		return x.TrainId
	}
	return 0
}

func (x *TicketPurchaseDetails) GetTrainName() string {
	if x != nil {
		return x.TrainName
	}
	return ""
}

func (x *TicketPurchaseDetails) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TicketPurchaseDetails) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TicketPurchaseDetails) GetNoOfTicktes() int32 {
	if x != nil {
		return x.NoOfTicktes
	}
	return 0
}

func (x *TicketPurchaseDetails) GetSectionASeat() []int32 {
	if x != nil {
		return x.SectionASeat
	}
	return nil
}

func (x *TicketPurchaseDetails) GetSectionBSeat() []int32 {
	if x != nil {
		return x.SectionBSeat
	}
	return nil
}

func (x *TicketPurchaseDetails) GetAmountPaid() int32 {
	if x != nil {
		return x.AmountPaid
	}
	return 0
}

func (x *TicketPurchaseDetails) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *TicketPurchaseDetails) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *TicketPurchaseDetails) GetEmailId() string {
	if x != nil {
		return x.EmailId
	}
	return ""
}

var File_train_ticketing_system_proto protoreflect.FileDescriptor

var file_train_ticketing_system_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xeb,
	0x02, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x1d, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x74, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x1d, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x69,
	0x74, 0x6f, 0x6e, 0x42, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x1a, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x74, 0x53,
	0x65, 0x63, 0x69, 0x74, 0x6f, 0x6e, 0x42, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x17,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x15, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x74, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x05, 0x52, 0x15, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x65, 0x61, 0x74, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x22, 0xd9, 0x02, 0x0a,
	0x15, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x6f, 0x4f, 0x66, 0x54, 0x69, 0x63, 0x6b,
	0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e, 0x6f, 0x4f, 0x66, 0x54,
	0x69, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x53, 0x65, 0x61, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x53, 0x65, 0x61, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x32, 0xf3, 0x02, 0x0a, 0x15, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x31, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0d, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x1a, 0x0d, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0f, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x1a, 0x16, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0f, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x12, 0x16, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x16, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x2e, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x1a, 0x16, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x00, 0x12, 0x4f, 0x0a,
	0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x2e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x1a, 0x16, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x00, 0x42, 0x3f,
	0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x68, 0x72,
	0x69, 0x68, 0x61, 0x72, 0x69, 0x68, 0x61, 0x72, 0x61, 0x6e, 0x62, 0x61, 0x2f, 0x62, 0x6f, 0x6f,
	0x6b, 0x2d, 0x79, 0x6f, 0x75, 0x72, 0x2d, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x2f, 0x73, 0x72, 0x63,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_train_ticketing_system_proto_rawDescOnce sync.Once
	file_train_ticketing_system_proto_rawDescData = file_train_ticketing_system_proto_rawDesc
)

func file_train_ticketing_system_proto_rawDescGZIP() []byte {
	file_train_ticketing_system_proto_rawDescOnce.Do(func() {
		file_train_ticketing_system_proto_rawDescData = protoimpl.X.CompressGZIP(file_train_ticketing_system_proto_rawDescData)
	})
	return file_train_ticketing_system_proto_rawDescData
}

var file_train_ticketing_system_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_train_ticketing_system_proto_goTypes = []any{
	(*TrainDetails)(nil),          // 0: TrainDetails
	(*TicketPurchaseDetails)(nil), // 1: TicketPurchaseDetails
}
var file_train_ticketing_system_proto_depIdxs = []int32{
	0, // 0: TrainTicketingService.GetTrainDetails:input_type -> TrainDetails
	1, // 1: TrainTicketingService.BookTrainTicket:input_type -> TicketPurchaseDetails
	1, // 2: TrainTicketingService.ModifyTrainSeat:input_type -> TicketPurchaseDetails
	1, // 3: TrainTicketingService.GetTicketPurchaseDetails:input_type -> TicketPurchaseDetails
	1, // 4: TrainTicketingService.DeleteTicketPurchaseDetails:input_type -> TicketPurchaseDetails
	0, // 5: TrainTicketingService.GetTrainDetails:output_type -> TrainDetails
	1, // 6: TrainTicketingService.BookTrainTicket:output_type -> TicketPurchaseDetails
	1, // 7: TrainTicketingService.ModifyTrainSeat:output_type -> TicketPurchaseDetails
	1, // 8: TrainTicketingService.GetTicketPurchaseDetails:output_type -> TicketPurchaseDetails
	1, // 9: TrainTicketingService.DeleteTicketPurchaseDetails:output_type -> TicketPurchaseDetails
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_train_ticketing_system_proto_init() }
func file_train_ticketing_system_proto_init() {
	if File_train_ticketing_system_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_train_ticketing_system_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_train_ticketing_system_proto_goTypes,
		DependencyIndexes: file_train_ticketing_system_proto_depIdxs,
		MessageInfos:      file_train_ticketing_system_proto_msgTypes,
	}.Build()
	File_train_ticketing_system_proto = out.File
	file_train_ticketing_system_proto_rawDesc = nil
	file_train_ticketing_system_proto_goTypes = nil
	file_train_ticketing_system_proto_depIdxs = nil
}
